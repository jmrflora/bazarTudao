// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClientesColumns holds the columns for the "clientes" table.
	ClientesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "nome", Type: field.TypeString},
		{Name: "cpf", Type: field.TypeString, Unique: true},
		{Name: "telefone", Type: field.TypeString},
	}
	// ClientesTable holds the schema information for the "clientes" table.
	ClientesTable = &schema.Table{
		Name:       "clientes",
		Columns:    ClientesColumns,
		PrimaryKey: []*schema.Column{ClientesColumns[0]},
	}
	// ItemOrdemsColumns holds the columns for the "item_ordems" table.
	ItemOrdemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantidade", Type: field.TypeInt},
		{Name: "preco", Type: field.TypeFloat64, SchemaType: map[string]string{"postgres": "numeric(8,2)"}},
		{Name: "ordem_id", Type: field.TypeInt},
		{Name: "produto_id", Type: field.TypeInt},
	}
	// ItemOrdemsTable holds the schema information for the "item_ordems" table.
	ItemOrdemsTable = &schema.Table{
		Name:       "item_ordems",
		Columns:    ItemOrdemsColumns,
		PrimaryKey: []*schema.Column{ItemOrdemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "item_ordems_ordems_ordem",
				Columns:    []*schema.Column{ItemOrdemsColumns[3]},
				RefColumns: []*schema.Column{OrdemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "item_ordems_produtos_produto",
				Columns:    []*schema.Column{ItemOrdemsColumns[4]},
				RefColumns: []*schema.Column{ProdutosColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "itemordem_ordem_id_produto_id",
				Unique:  true,
				Columns: []*schema.Column{ItemOrdemsColumns[3], ItemOrdemsColumns[4]},
			},
		},
	}
	// OrdemsColumns holds the columns for the "ordems" table.
	OrdemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "data_ordem", Type: field.TypeTime},
		{Name: "cliente_ordens", Type: field.TypeInt, Nullable: true},
	}
	// OrdemsTable holds the schema information for the "ordems" table.
	OrdemsTable = &schema.Table{
		Name:       "ordems",
		Columns:    OrdemsColumns,
		PrimaryKey: []*schema.Column{OrdemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ordems_clientes_ordens",
				Columns:    []*schema.Column{OrdemsColumns[2]},
				RefColumns: []*schema.Column{ClientesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProdutosColumns holds the columns for the "produtos" table.
	ProdutosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sku", Type: field.TypeString, Unique: true},
		{Name: "nome", Type: field.TypeString},
		{Name: "quant_no_estoque", Type: field.TypeInt},
	}
	// ProdutosTable holds the schema information for the "produtos" table.
	ProdutosTable = &schema.Table{
		Name:       "produtos",
		Columns:    ProdutosColumns,
		PrimaryKey: []*schema.Column{ProdutosColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClientesTable,
		ItemOrdemsTable,
		OrdemsTable,
		ProdutosTable,
	}
)

func init() {
	ItemOrdemsTable.ForeignKeys[0].RefTable = OrdemsTable
	ItemOrdemsTable.ForeignKeys[1].RefTable = ProdutosTable
	OrdemsTable.ForeignKeys[0].RefTable = ClientesTable
}
